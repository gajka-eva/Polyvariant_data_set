# -*- coding: utf-8 -*-
"""Comparison_of_results.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tpm0HQ77eYM8Z61I36eLLj_-5sFsGoR5
"""

import pandas as pd
import re

# Чтение данных из текстового файла
with open('/content/test_3-5.txt', 'r', encoding='utf-8') as file:
    lines = file.readlines()

data = []
for line in lines:
    parts = line.strip().split()
    data.append(parts)

# Определение максимального числа колонок
max_cols = max(len(row) for row in data)

# Добавление пустых значений для строк, где не хватает колонок
for row in data:
    while len(row) < max_cols:
        row.append(None)

# Создание датасета
df = pd.DataFrame(data, columns=[f"column_{i+1}" for i in range(max_cols)])

# Запись в CSV файл
df.to_csv('output.csv', index=False, encoding='utf-8')

# Вывод фрагмента датасета
df.head()

# Сокращение столбцов, в которых не представлена нужная информация
df = df.iloc[:, :15]

# Заполнение пропусков любым числовым значением
df = df.fillna(1.2)

# Объединение в столбец
df['morphemic_structure'] = df.iloc[:, 1:15].astype(str).agg(' '.join, axis=1)

# Отбор нужных столбцов
df = df[['column_1', 'morphemic_structure']]

# Переименование столбцов
df = df.rename(columns={'column_1': 'lemma'})

# Вывод фрагмента датасета
df.head()

# Удаление цифр и замена пробелов
df[['morphemic_structure']] = df[['morphemic_structure']].applymap(lambda x: ''.join([c if not c.isdigit() else '' for c in x]).replace(' ', ':'))

# Удаление знаков пунктуации в конце строк
df[['lemma', 'morphemic_structure']] = df[['lemma', 'morphemic_structure']].applymap(lambda x: re.sub(r'[^\w\s]', '', x))

# Вывод фрагмента датасета
df.head()

# Тестовый датасет для сравнения
data = pd.read_csv('/content/test_tikhonov.csv')

# Удаление знаков пунктуации
data[['lemma', 'morphemic_structure']] = data[['lemma', 'morphemic_structure']].applymap(lambda x: re.sub(r'[^\w\s]', '', x))

# Удаление ненужных символов
data['morphemic_structure'] = data['morphemic_structure'].str.replace('ØEND', '')

# Объединение датасетов по столбцу 'lemma'
merged_df = pd.merge(df, data, on='lemma', how='inner')

# Создание нового столбца сравнения
merged_df['comparison'] = merged_df.apply(lambda row: row['predict'] == row['test'], axis=1)

# Статистика по столбцу с результатами сравнения
merged_df['comparison'].value_counts()

# Сохранение файла
merged_df.to_csv('tikhonov_forms_test_cnn.csv')