! pip install langchain openai chromadb tiktoken

import os
import pandas as pd
import openai
from openai import OpenAI
import json
from difflib import SequenceMatcher

client = OpenAI(
    api_key = "***" # здесь вводить ключ
)

task = """
РОЛЬ: ты эксперт по русскому языку и морфемному анализу.
ЗАДАЧА: выполнить морфемное разложение слова, следуя ИНСТРУКЦИИ
ИНСТРУКЦИЯ:
1. Прочитай слово внимательно, ты должен сохранить все буквы в слове при его разборе, не удалять их и не добавлять новые.
2. Раздели слово на следующие морфемы:
PREF приставка (если есть)
ROOT корень (основная часть слова)
SUFF суффикс (если есть)
END окончание (если есть, помни, что окончания есть у всех изменяемых слов)
POST постфикс (если есть)
3. Соблюдай вид записи, что и в примерах, указанных ниже
Пример 1
Слово: "барочный", часть речи: A
Разделение на морфемы: бароч:ROOT/н:SUFF/ый:END
Пример 2
Слово: "бегемотий", часть речи: A
Разделение на морфемы: бегемот:ROOT/ий:SUFF/Ø:END
Пример 3
Слово "бессмысленный", часть речи: A
Разделение на морфемы: бес:PREF/с:PREF/мысл:ROOT/енн:SUFF/ый:END
Пример 4
Слово "купаться", часть речи: V
Разделение на морфемы: куп:ROOT/а:SUFF/ть:END/ся:POST
Пример 5
Слово "налететь", часть речи: V
Разделение на морфемы: на:PREF/лет:ROOT/е:SUFF/ть:END
Пример 6
Слово "снег", часть речи: S
Разделение на морфемы: снег:ROOT/Ø:END
Пример 7
Слово "медведица", часть речи: S
Разделение на морфемы: медвед:ROOT/иц:SUFF/а:END
Пример 8
Слово "бессердечность", часть речи: S
Разделение на морфемы: бес:PREF/серд:ROOT/ечн:SUFF/ость:SUFF/Ø:END
Пример 9
Слово "налево", часть речи: ADV
Разделение на морфемы: на:PREF/лев:ROOT/о:SUFF
Пример 10
Слово по-своему, часть речи: ADV
Разделение на морфемы: по:PREF/сво:ROOT/ему:SUFF
"""

prompt = f"{task}\n\n'Разбери на морфемы слово {'чужеземец'}'"

# Использование настроенной модели
response = client.chat.completions.create(
    model='gpt-3.5-turbo',
    messages=[
        {"role": "system", "content": "Ты помощник, разбирающий слова на морфемы."},
        {"role": "user", "content": prompt}
    ],
    max_tokens=50
)

print(response.choices[0].message.content)
